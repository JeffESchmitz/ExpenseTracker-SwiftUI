name: iOS CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ios-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: macos-15            # pin a macOS that carries Xcode 16.x
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode 16.x
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2.0'   # or '16.2' or '16.*'

      - name: Show Xcode / SDK info
        run: |
          xcode-select -p
          xcodebuild -version
          xcodebuild -showsdks

      - name: Show available simulators and destinations
        run: |
          echo "Available simulators:"
          xcrun simctl list devices
          echo "Available destinations:"
          xcodebuild -showdestinations -project ExpenseTracker.xcodeproj -scheme ExpenseTracker

      - name: Build for Testing (incremental approach)
        timeout-minutes: 15
        shell: bash
        run: |
          set -o pipefail
          mkdir -p build
          
          echo "Starting build at $(date)"
          xcodebuild \
            -project ExpenseTracker.xcodeproj \
            -scheme ExpenseTracker \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone SE (3rd generation),OS=18.4' \
            -configuration Debug \
            -xcconfig .ci/ci.xcconfig \
            build-for-testing \
            -resultBundlePath build/ExpenseTracker.xcresult \
            | while read line; do
              echo "$(date '+%H:%M:%S'): $line"
            done | tee build/xcodebuild.log
          echo "Build completed at $(date)"

      - name: Run Tests (if build succeeded)
        if: success()
        timeout-minutes: 10
        shell: bash  
        run: |
          set -o pipefail
          echo "Starting tests at $(date)"
          xcodebuild \
            -project ExpenseTracker.xcodeproj \
            -scheme ExpenseTracker \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone SE (3rd generation),OS=18.4' \
            -configuration Debug \
            -xcconfig .ci/ci.xcconfig \
            test-without-building \
            -resultBundlePath build/ExpenseTracker.xcresult \
            | tee -a build/xcodebuild.log
          echo "Tests completed at $(date)"

      - name: Upload result bundle & logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: xcresult-and-logs
          path: |
            build/ExpenseTracker.xcresult
            build/xcodebuild.log
          retention-days: 7
          if-no-files-found: warn

      - name: Clean up simulators
        if: always()
        run: |
          xcrun simctl shutdown all || true
          pkill -9 -f Simulator || true